Certainly! Here's the equivalent Java code using `List` instead of arrays:

```java
import java.util.List;

public class Forecast {
    public static double forecast(double x, List<Double> ky, List<Double> kx) {
        int i = 0;
        double nr = 0, dr = 0, ax = 0, ay = 0, a = 0, b = 0;

        // Calculate average for kx
        double sumKx = 0;
        for (Double value : kx) {
            sumKx += value;
        }
        ax = sumKx / kx.size();

        // Calculate average for ky
        double sumKy = 0;
        for (Double value : ky) {
            sumKy += value;
        }
        ay = sumKy / ky.size();

        // Calculate forecast
        for (i = 0; i < kx.size(); i++) {
            nr += ((kx.get(i) - ax) * (ky.get(i) - ay));
            dr += Math.pow((kx.get(i) - ax), 2);
        }

        b = nr / dr;
        a = ay - b * ax;

        return (a + b * x);
    }

    public static void main(String[] args) {
        // Example usage
        List<Double> kx = List.of(/* Insert your values here */);
        List<Double> ky = List.of(/* Insert your values here */);
        double x = /* Insert your value here */;

        double result = forecast(x, ky, kx);
        System.out.println("Forecast: " + result);
    }
}
```

This code uses `List` from the Java Collections framework. Replace the placeholders with your actual data when using this code.