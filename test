If you're using a JPA repository in Spring Data, you can create a custom query method in your repository interface. Assuming your entity has a column named `columnName` storing the x.y.z pattern, here's an example:

```java
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.data.jpa.repository.JpaRepository;

public interface YourEntityRepository extends JpaRepository<YourEntity, Long> {

    @Query("SELECT MAX(CAST(SUBSTRING_INDEX(e.columnName, '.', 1) AS UNSIGNED)) AS x, " +
           "       MAX(CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(e.columnName, '.', -2), '.', 1) AS UNSIGNED)) AS y, " +
           "       MAX(CAST(SUBSTRING_INDEX(e.columnName, '.', -1) AS UNSIGNED)) AS z " +
           "FROM YourEntity e")
    YourEntity findMaxXYZPattern();
}
```

Replace `YourEntity` with your actual entity class name.

Make sure you adjust the entity class and column names based on your actual setup. This custom query method will return an instance of `YourEntity` containing the maximum x, y, and z values from the x.y.z pattern.